{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","websiteName","id","type","onClick","toggleMode","dMode","TextForm","useState","text","setText","style","color","value","backgroundcolor","onChange","event","target","rows","newText","toUpperCase","length","showAlert","toLowerCase","split","join","Alert","alert","role","msg","App","setMode","setdMode","SetAlert","message","setTimeout","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAGe,SAASA,EAAOC,GAG3B,OACA,mCACA,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACF,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAqC,6BAAKH,EAAMI,gBAChD,qBAAKH,UAAU,2BAA2BI,GAAG,yBAA7C,SACE,qBAAIJ,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,SAA4D,0CAE9D,oBAAIF,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,SAA4D,mDAIpE,wBAAQG,KAAK,SAASL,UAAU,gBAAgBM,QAASP,EAAMQ,WAA/D,SAA4ER,EAAMS,eCnBrE,SAASC,EAASV,GAC7B,IAmCA,EAAuBW,mBAAS,mBAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KAEA,OACI,qCACI,qBAAKZ,UAAU,aAAaa,MAAO,CAACC,MAAoB,SAAbf,EAAME,KAAc,QAAQ,SAAvE,SACK,0BAAUD,UAAU,eAAeI,GAAG,8BAA8BW,MAAOJ,EAAME,MAAO,CAACG,gBAA8B,SAAbjB,EAAME,KAAc,QAAQ,SAAUgB,SAxBtI,SAACC,GACpBN,EAAQM,EAAMC,OAAOJ,QAuB8JK,KAAK,QAEpL,gCACA,wBAAQf,KAAK,SAASC,QA3CV,WAChB,IAAIe,EAAUV,EAAKW,cACnBV,EAAQS,GACLV,EAAKY,OAAO,GAEfxB,EAAMyB,UAAU,uBAAuB,YAsCWxB,UAAU,gCAAxD,uBACA,wBAAQK,KAAK,SAASC,QApCT,WACjB,IAAIe,EAAUV,EAAKc,cACnBb,EAAQS,GACLV,EAAKY,OAAO,GAEfxB,EAAMyB,UAAU,uBAAuB,YA+BYxB,UAAU,gCAAzD,uBACA,wBAAQK,KAAK,SAASC,QA1BP,WAEnBM,EADc,IAEXD,EAAKY,OAAO,GAEfxB,EAAMyB,UAAU,mBAAmB,YAqBgBxB,UAAU,6BAAzD,mBACA,wBAAQK,KAAK,SAASC,QAnBL,WACrB,IAAIe,EAAUV,EAAKe,MAAM,QACzBd,EAAQS,EAAQM,KAAK,MAClBhB,EAAKY,OAAO,GAEfxB,EAAMyB,UAAU,+BAA+B,YAcMxB,UAAU,8BAA3D,mCAEA,sBAAKA,UAAU,iBAAiBa,MAAO,CAACC,MAAoB,SAAbf,EAAME,KAAc,QAAQ,SAA3E,UACI,uBACA,mDACA,4BAAIU,EAAKY,OAAO,EAAIZ,EAAM,0BAC1B,uBACA,8BAAIA,EAAKY,OAAT,mBAAiCZ,EAAKe,MAAM,KAAKH,OAAjD,kBC3CDK,MAXf,SAAe7B,GACX,OACIA,EAAM8B,OACN,qBAAK7B,UAAU,YAAf,SACA,qBAAKA,UAAU,gCAAgC8B,KAAK,QAApD,SACI,+BAAK/B,EAAM8B,MAAMxB,KAAjB,YAAoCN,EAAM8B,MAAME,YCmE7CC,MA/Df,WACI,MAAuBtB,mBAAS,SAAhC,mBAAOT,EAAP,KAAYgC,EAAZ,KACA,EAAwBvB,mBAAS,oBAAjC,mBAAMF,EAAN,KAAY0B,EAAZ,KAiBA,EAAwBxB,mBAAS,MAAjC,mBAAMmB,EAAN,KAAYM,EAAZ,KAEMX,EAAY,SAACY,EAAQ/B,GACzB8B,EAAS,CACPJ,IAAKK,EACL/B,KAAMA,KAaZ,OAVEgC,YAAW,WACTF,EAAS,QACR,KASH,qCAgBD,cAACrC,EAAD,CAAQK,YAAY,YAAYF,KAAMA,EAAMM,WAnDxB,WACP,UAAPN,GAEDgC,EAAQ,QACRK,SAASC,KAAK1B,MAAM2B,gBAAkB,UACtChB,EAAU,6BAA6B,WACvCU,EAAS,uBAITD,EAAQ,SACRK,SAASC,KAAK1B,MAAM2B,gBAAkB,QACtChB,EAAU,8BAA8B,WACxCU,EAAS,sBAsCsD1B,MAAOA,IAC1E,cAAC,EAAD,CAAOqB,MAAOA,IACd,qBAAK7B,UAAU,YAAf,SACD,cAACS,EAAD,CAAUR,KAAMA,EAAMuB,UAAWA,UCxDrBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BZ,K","file":"static/js/main.f650242f.chunk.js","sourcesContent":["import React from 'react'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n \r\n\r\n    return (\r\n    <>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\"><h1>{props.websiteName}</h1></a>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"><h5>Home</h5></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\"><h5>About Us</h5></a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  <button type=\"button\" className=\"btn btn-light\" onClick={props.toggleMode}>{props.dMode}</button>\r\n\r\n  </div>\r\n</nav>\r\n      </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        if(text.length>0)\r\n        {\r\n        props.showAlert(\"Changed in uppercase\",\"Success\")\r\n        }\r\n    }\r\n    const handleLowClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        if(text.length>0)\r\n        {\r\n        props.showAlert(\"Changed in lowercase\",\"Success\")\r\n        }\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const handleClsClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        if(text.length>0)\r\n        {\r\n        props.showAlert(\"TextBox is empty\",\"Success\")\r\n        }\r\n    }\r\n    const handleExtraSpace = () =>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        if(text.length>0)\r\n        {\r\n        props.showAlert(\"Extra space has been removed\",\"Success\")\r\n        }\r\n    }\r\n    const [text,setText] = useState('Enter text here');\r\n    //text=\"Enter text here\";\r\n    return (\r\n        <>\r\n            <div className=\"form-group\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                 <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" value={text} style={{backgroundcolor: props.mode==='dark'?'black':'white'}} onChange={handleOnChange} rows=\"8\"></textarea>\r\n            </div>\r\n            <div>\r\n            <button type=\"button\" onClick={handleUpClick} className=\"btn btn-secondary btn-lg mx-2\">UpperCase</button>\r\n            <button type=\"button\" onClick={handleLowClick} className=\"btn btn-secondary btn-lg mx-2\">LowerCase</button>\r\n            <button type=\"button\" onClick={handleClsClick} className=\"btn btn-danger btn-lg mx-2\">Clear</button>\r\n            <button type=\"button\" onClick={handleExtraSpace} className=\"btn btn-Success btn-lg mx-2\">Remove Extra Space</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n                <hr/>\r\n                <h2>Your Text Preview</h2>\r\n                <p>{text.length>0 ? text: 'Enter Text To Preview'}</p>\r\n                <br/>\r\n                <p>{text.length} characters and {text.split(\" \").length} words</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert &&\r\n        <div className=\"container\">\r\n        <div className=\"container alert alert-success\" role=\"alert\">\r\n            <h5>{props.alert.type}&nbsp;:&nbsp;{props.alert.msg}</h5>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n//import About from './components/About';\nimport {useState} from 'react';\nimport Alert from './components/Alert';\n/*import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";*/\nfunction App() {\n    const [mode,setMode] = useState('light')\n    const[dMode,setdMode] = useState('Enable Dark Mode')\n    const toggleMode = ()=>{\n      if(mode==='light')\n      {\n        setMode('dark');\n        document.body.style.backgroundColor = \"#232324\";\n        showAlert(\"Dark mode has been enabled\",\"Success\")\n        setdMode(\"Disable Dark Mode\")\n      }\n      else\n      {\n        setMode('light');\n        document.body.style.backgroundColor = \"white\";\n        showAlert(\"Light mode has been enabled\",\"Success\")\n        setdMode(\"Enable Dark Mode\")\n      }\n    }\n    const[alert,SetAlert] = useState(null)\n\n    const showAlert = (message,type)=>{\n      SetAlert({\n        msg: message,\n        type: type\n      })\n    }\n    setTimeout(() => {\n      SetAlert(null)\n    }, 2000);\n    // setInterval(()=>{\n    //   document.title='Install TextUtils Now'\n    // },2000)\n    // setInterval(()=>{\n    //   document.title='TextUtils Is Amazing'\n    // },1500)\n   \n  return (\n    <>\n   {/*} <Router>\n    <Navbar websiteName=\"TextUtils\" mode={mode} toggleMode={toggleMode} dMode={dMode}/>\n    <Alert alert={alert}/>\n    <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n    \n          <Route path=\"/\">\n          <div className=\"container\">\n   <TextForm mode={mode} showAlert={showAlert}/>\n   </div>\n          </Route>\n        </Switch>\n   </Router>*/}\n   <Navbar websiteName=\"TextUtils\" mode={mode} toggleMode={toggleMode} dMode={dMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container\">\n   <TextForm mode={mode} showAlert={showAlert}/>\n   </div>\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}